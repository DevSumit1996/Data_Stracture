//Euclidean algorithms
#include<bits/stdc++.h>
using namespace std;
int gcd(int a,int b){
    if(a==0) 
    return b;
    return gcd(b%a,a);
}
int main(){
    int a,b;
    cin>>a>>b;
    cout<<gcd(a,b)<<endl;
    return 0;
}




// extended euclidian algorithm
#include<bits/stdc++.h>
using namespace std;
int gcdExtended(int a,int b,int *x,int *y){
    //base case
    if(a==0){
        *x=0;
        *y=1;
        return b;
    }
    int x1,y1;
    int gcd=gcdExtended(b%a,a,&x1,&y1);
    *x=y1-(b/a)*x1;
    *y=x1;
    return gcd;

}
int main(){
    int x,y;
    int a=35,b=15;
    cout<<gcdExtended(a,b,&x,&y);
    return 0;
}

